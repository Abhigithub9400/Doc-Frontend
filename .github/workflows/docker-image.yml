name: Doc-FE
on:
  push:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Build and push Docker image
      run: | 
        # Set image name and tag
        IMAGE_NAME=my-image-name
        TAG=$(date +%s)
        
        # Build the image
        docker build . --file DocQuery/dockerfile --tag $IMAGE_NAME:$TAG
        
        # Tag with latest
        docker tag $IMAGE_NAME:$TAG ${{ secrets.DOCKER_HUB_USERNAME }}/$IMAGE_NAME:latest
        docker tag $IMAGE_NAME:$TAG ${{ secrets.DOCKER_HUB_USERNAME }}/$IMAGE_NAME:$TAG
        
        # Push the images
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/$IMAGE_NAME:latest
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/$IMAGE_NAME:$TAG
        
        # Store the tag for deployment
        echo "DOCKER_TAG=$TAG" >> $GITHUB_ENV
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      
    - name: Set up kubeconfig
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
        chmod 600 $HOME/.kube/config
    
    - name: Deploy to Kubernetes
      run: |
        # Create kubernetes directory if it doesn't exist
        mkdir -p kubernetes
        
        # Create deployment YAML with the correct image tag
        cat > kubernetes/deployment.yaml << EOF
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: docquery-app
          labels:
            app: docquery
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: docquery
          template:
            metadata:
              labels:
                app: docquery
            spec:
              containers:
              - name: docquery
                image: ${{ secrets.DOCKER_HUB_USERNAME }}/my-image-name:latest
                ports:
                - containerPort: 80
                # No environment variables needed
                resources:
                  limits:
                    cpu: "500m"
                    memory: "512Mi"
                  requests:
                    cpu: "200m"
                    memory: "256Mi"
        ---
        apiVersion: v1
        kind: Service
        metadata:
          name: docquery-service
        spec:
          selector:
            app: docquery
          ports:
          - port: 80
            targetPort: 80
          type: NodePort
        EOF
        
        # Apply the deployment
        kubectl apply -f kubernetes/deployment.yaml
        
        # Wait for deployment to complete
        kubectl rollout status deployment/docquery-app
